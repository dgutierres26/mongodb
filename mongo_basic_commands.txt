// show Databases
show dbs

//Create Databases
use people

# Collections are equivilent to table in SQL language

//Create a Collections
db.createCollection("person")

//Insert Data
db.person.insert(
    {
        name: "Jonh",
        age: 30
    }
)

//Find a Data - Equivilent to SELECT * FROM person in SQL language
db.person.find()

//Display data in a better way
db.person.find().pretty()

//Clean MongoDB Terminal
cls

//Show Collections
show Collections

//Delete/Drop Collections
db.pesron.drop()

//Insert Multiple Data
db.person.insert(
    [
        {
            name: "John",
            age: 30
        },
        {
            name: "Mary",
            age: 27
        },
        {
            name: "Ana",
            age: 21
        }
    ]
)

//Update Data (careful)(Overwrite)
db.person.update(
    {_id: ObjectId("5fa3ef16929bb20370e90f1a")},
    {age:25}
)

//Update that updates a data and keep the rest
db.person.update(
     {_id: ObjectId("5fa3ef16929bb20370e90f1a")},
     {
        $set: {
         name: "Jonh"
        }
     }
)

//Find a data by parameter
db.person.find(
    {
        name: "Jonh"
    }
).pretty()

//Sort Data - number 1 is ascending and -1 is descending sort
db.person.find().sort(
    {name: 1 }
).pretty()

//Limit of Results
#limit of all Results
db.person.find().limit(2)

#limi of elements age 55
db.person.find({age: 55}).limit(2).pretty()

#limit of elements age 55 and sorted by name
db.person.find({age: 55}).sort({name:1}).limit(2).pretty()

//Get Size/ Count elements
db.person.count()

//Add new Field to an elements
db.person.update(
    {_id: ObjectId("5fa3fedfeeec8e0b1195084a") },
    {
        $push: { kids: ["Taba", "Naruna", "Josefina"]}
    }
)

//Unset a Field
db.person.update(
    {_id: ObjectId("5fa3fedfeeec8e0b1195084a") },
    {
        $unset: {surname: ""}
    }
)

//Find based on more than one parameter
db.person.find(
    {name: "John", surname:"Cachumba"}
).prett()